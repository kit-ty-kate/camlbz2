variables:
  GIT_STRATEGY: "fetch"
  GIT_DEPTH: "1"

stages:
  - build

.build_template: &build_definition
  image: ocaml/opam2
  stage: build
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - _build
      - ~/.opam
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - _build/
    expire_in: 1 day
  tags:
    - gitlab-org
  script:
    - sudo apt-get update
    - sudo apt-get install libbz2-dev -y
    - opam init
    - opam remote set-url default git://github.com/ocaml/opam-repository.git
    - opam depext -iy dune.2.8.2
    - opam install . --dry-run --deps-only --locked --with-test --with-doc --yes | awk '/-> installed/{print $3}' | xargs opam depext -iy
    - dune build .
    - opam clean

build:
  <<: *build_definition
  image: ocaml/opam2

build403:
  <<: *build_definition
  image: ocaml/opam2:4.03

# make the linting a separate job because:
#   - installing ocamlformat and dependencies from opam takes 5 minutes
#   - avoiding to taint the build environment with additional packages
lint:
  image: ocaml/opam2
  stage: build
  script:
    - sudo apt-get update
    - opam init
    - opam remote set-url default git://github.com/ocaml/opam-repository.git
      # rebuild .opam to check whether the file in git matches what is
      # generated by dune
    - opam depext -iy dune.2.8.2 ocamlformat
    - dune build camlbz2.opam
    - git diff --exit-code
      # check whether source code complies with ocamlformat
    - dune build @fmt
    - opam clean

pages:
  image: ocaml/opam2
  stage: build
  only:
    - master
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - _build
      - ~/.opam
      - doc/rtd/_build
  artifacts:
    paths:
      - public/
  script:
    - sudo apt-get update
    - sudo apt-get install -y
        graphviz
        pandoc
        pkg-config
        python3
        python3-virtualenv
        python3-yaml
        texlive-latex-base
        texlive-latex-extra
    - opam init
    - opam remote set-url default git://github.com/ocaml/opam-repository.git
    - opam install . --dry-run --deps-only --locked --with-test --with-doc --yes | awk '/-> installed/{print $3}' | xargs opam depext -iy
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
    - source $HOME/.poetry/env
    - env --chdir=doc/rtd poetry install
    - make doc
    - mkdir public
    - cp -a doc/rtd/_build/* public
    - cp -a _build/default/_doc/_html public/api

opam-debian:
  image: ocaml/opam:debian
  stage: build
  script:
    - opam remote set-url default git://github.com/ocaml/opam-repository.git
    - opam pin add -yn .
    - opam depext -uiy --with-test camlbz2

opam-alpine:
  image: ocaml/opam:alpine
  stage: build
  script:
    - opam remote set-url default git://github.com/ocaml/opam-repository.git
    - opam pin add -yn .
    - opam depext -uiy --with-test camlbz2
